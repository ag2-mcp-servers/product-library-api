# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T03:56:06+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, RootModel, confloat, conint, constr


class CategoryDTO(BaseModel):
    name: constr(min_length=0, max_length=100)
    uuid: UUID


class CategoryResponse(BaseModel):
    categories: List[CategoryDTO]


class ConstraintType(Enum):
    MUST_BE_FALSE = 'MUST_BE_FALSE'
    MUST_BE_TRUE = 'MUST_BE_TRUE'
    MUST_BE_LESS_THAN = 'MUST_BE_LESS_THAN'
    MUST_BE_GREATER_THAN = 'MUST_BE_GREATER_THAN'
    DIGIT_OUT_OF_BOUNDS = 'DIGIT_OUT_OF_BOUNDS'
    DATE_MUST_BE_IN_THE_FUTURE = 'DATE_MUST_BE_IN_THE_FUTURE'
    MUST_BE_LESS_OR_EQUAL_THAN = 'MUST_BE_LESS_OR_EQUAL_THAN'
    MUST_BE_GREATER_OR_EQUAL_TO = 'MUST_BE_GREATER_OR_EQUAL_TO'
    MUST_NOT_BE_NULL = 'MUST_NOT_BE_NULL'
    MUST_BE_NULL = 'MUST_BE_NULL'
    DATE_MUST_BE_IN_THE_PAST = 'DATE_MUST_BE_IN_THE_PAST'
    MUST_MATCH_PATTERN = 'MUST_MATCH_PATTERN'
    INVALID_SIZE = 'INVALID_SIZE'
    INVALID_EMAIL = 'INVALID_EMAIL'
    MUST_NOT_BE_EMPTY = 'MUST_NOT_BE_EMPTY'
    INVALID_RANGE = 'INVALID_RANGE'
    UNKNOWN = 'UNKNOWN'


class ConstraintViolation(BaseModel):
    constraintType: Optional[ConstraintType] = None
    developerMessage: Optional[str] = None
    expected: Optional[str] = None
    propertyName: Optional[str] = None
    value: Optional[str] = None


class CreateCategoriesRequest(BaseModel):
    categories: List[CategoryDTO]


class CreateSlugRequest(BaseModel):
    productName: constr(min_length=1, max_length=256)


class ErrorResponse(BaseModel):
    developerMessage: Optional[str] = None
    errorType: Optional[str] = None
    violations: Optional[List[ConstraintViolation]] = None


class State(Enum):
    IMPORTING = 'IMPORTING'
    FINISHED_SUCCESS = 'FINISHED_SUCCESS'
    FINISHED_FAILED = 'FINISHED_FAILED'


class ImportResponse(BaseModel):
    created: Optional[datetime] = None
    errorMessage: Optional[str] = None
    finished: Optional[datetime] = None
    items: Optional[int] = None
    state: Optional[State] = None
    uuid: Optional[UUID] = None


class LibraryImagesResponse(BaseModel):
    imageUrls: Optional[List[str]] = None


class Status(Enum):
    ACTIVE = 'ACTIVE'
    HIDDEN = 'HIDDEN'


class Option(BaseModel):
    name: Optional[str] = None
    values: Optional[List[str]] = None


class Presentation(BaseModel):
    additionalImageUrls: Optional[List[str]] = Field(None, max_length=25, min_length=0)
    displayImageUrl: Optional[str] = None
    mediaUrls: Optional[List[str]] = Field(None, max_length=8, min_length=0)


class PresentationDTO(BaseModel):
    backgroundColor: Optional[str] = None
    imageUrl: Optional[str] = None
    textColor: Optional[str] = None


class CurrencyId(Enum):
    AED = 'AED'
    AFA = 'AFA'
    AFN = 'AFN'
    ALL = 'ALL'
    AMD = 'AMD'
    ANG = 'ANG'
    AOA = 'AOA'
    ARS = 'ARS'
    AUD = 'AUD'
    AWG = 'AWG'
    AZM = 'AZM'
    AZN = 'AZN'
    BAM = 'BAM'
    BBD = 'BBD'
    BDT = 'BDT'
    BGN = 'BGN'
    BHD = 'BHD'
    BIF = 'BIF'
    BMD = 'BMD'
    BND = 'BND'
    BOB = 'BOB'
    BRL = 'BRL'
    BSD = 'BSD'
    BTN = 'BTN'
    BWP = 'BWP'
    BYR = 'BYR'
    BZD = 'BZD'
    CAD = 'CAD'
    CDF = 'CDF'
    CHF = 'CHF'
    CLP = 'CLP'
    CNY = 'CNY'
    COP = 'COP'
    CRC = 'CRC'
    CSD = 'CSD'
    CUC = 'CUC'
    CUP = 'CUP'
    CVE = 'CVE'
    CYP = 'CYP'
    CZK = 'CZK'
    DJF = 'DJF'
    DKK = 'DKK'
    DOP = 'DOP'
    DZD = 'DZD'
    EEK = 'EEK'
    EGP = 'EGP'
    ERN = 'ERN'
    ETB = 'ETB'
    EUR = 'EUR'
    FJD = 'FJD'
    FKP = 'FKP'
    GBP = 'GBP'
    GEL = 'GEL'
    GGP = 'GGP'
    GHC = 'GHC'
    GHS = 'GHS'
    GIP = 'GIP'
    GMD = 'GMD'
    GNF = 'GNF'
    GTQ = 'GTQ'
    GYD = 'GYD'
    HKD = 'HKD'
    HNL = 'HNL'
    HRK = 'HRK'
    HTG = 'HTG'
    HUF = 'HUF'
    IDR = 'IDR'
    ILS = 'ILS'
    IMP = 'IMP'
    INR = 'INR'
    IQD = 'IQD'
    IRR = 'IRR'
    ISK = 'ISK'
    JEP = 'JEP'
    JMD = 'JMD'
    JOD = 'JOD'
    JPY = 'JPY'
    KES = 'KES'
    KGS = 'KGS'
    KHR = 'KHR'
    KMF = 'KMF'
    KPW = 'KPW'
    KRW = 'KRW'
    KWD = 'KWD'
    KYD = 'KYD'
    KZT = 'KZT'
    LAK = 'LAK'
    LBP = 'LBP'
    LKR = 'LKR'
    LRD = 'LRD'
    LSL = 'LSL'
    LTL = 'LTL'
    LVL = 'LVL'
    LYD = 'LYD'
    MAD = 'MAD'
    MDL = 'MDL'
    MGA = 'MGA'
    MKD = 'MKD'
    MMK = 'MMK'
    MNT = 'MNT'
    MOP = 'MOP'
    MRO = 'MRO'
    MTL = 'MTL'
    MUR = 'MUR'
    MVR = 'MVR'
    MWK = 'MWK'
    MXN = 'MXN'
    MYR = 'MYR'
    MZM = 'MZM'
    MZN = 'MZN'
    NAD = 'NAD'
    NGN = 'NGN'
    NIO = 'NIO'
    NOK = 'NOK'
    NPR = 'NPR'
    NZD = 'NZD'
    OMR = 'OMR'
    PAB = 'PAB'
    PEN = 'PEN'
    PGK = 'PGK'
    PHP = 'PHP'
    PKR = 'PKR'
    PLN = 'PLN'
    PYG = 'PYG'
    QAR = 'QAR'
    RON = 'RON'
    RSD = 'RSD'
    RUB = 'RUB'
    RWF = 'RWF'
    SAR = 'SAR'
    SBD = 'SBD'
    SCR = 'SCR'
    SDD = 'SDD'
    SDG = 'SDG'
    SEK = 'SEK'
    SGD = 'SGD'
    SHP = 'SHP'
    SIT = 'SIT'
    SKK = 'SKK'
    SLL = 'SLL'
    SOS = 'SOS'
    SPL = 'SPL'
    SRD = 'SRD'
    SSP = 'SSP'
    STD = 'STD'
    SVC = 'SVC'
    SYP = 'SYP'
    SZL = 'SZL'
    THB = 'THB'
    TJS = 'TJS'
    TMM = 'TMM'
    TMT = 'TMT'
    TND = 'TND'
    TOP = 'TOP'
    TRL = 'TRL'
    TRY = 'TRY'
    TTD = 'TTD'
    TVD = 'TVD'
    TWD = 'TWD'
    TZS = 'TZS'
    UAH = 'UAH'
    UGX = 'UGX'
    USD = 'USD'
    UYU = 'UYU'
    UZS = 'UZS'
    VEB = 'VEB'
    VEF = 'VEF'
    VND = 'VND'
    VUV = 'VUV'
    WST = 'WST'
    XAF = 'XAF'
    XAG = 'XAG'
    XAU = 'XAU'
    XCD = 'XCD'
    XDR = 'XDR'
    XOF = 'XOF'
    XPD = 'XPD'
    XPF = 'XPF'
    XPT = 'XPT'
    YER = 'YER'
    ZAR = 'ZAR'
    ZMK = 'ZMK'
    ZMW = 'ZMW'
    ZWD = 'ZWD'
    ZWL = 'ZWL'


class Price(BaseModel):
    amount: conint(ge=0)
    currencyId: CurrencyId


class ProductCountResponse(BaseModel):
    productCount: int


class RenameCategoryRequest(BaseModel):
    name: constr(pattern=r'\S|\S.*\S', min_length=1, max_length=100)


class SearchEngineOptimization(BaseModel):
    metaDescription: Optional[constr(min_length=0, max_length=320)] = None
    slug: Optional[constr(min_length=1, max_length=256)] = None
    title: Optional[constr(min_length=0, max_length=256)] = None


class ShippingPricingModel(Enum):
    FREE = 'FREE'
    STANDARD = 'STANDARD'


class SlugResponse(BaseModel):
    productName: Optional[str] = None
    slug: Optional[str] = None


class SourceDTO(BaseModel):
    external: Optional[bool] = None
    name: Optional[str] = None


class TaxRate(BaseModel):
    default: Optional[bool] = None
    label: constr(min_length=0, max_length=512)
    percentage: Optional[confloat(le=100.0)] = None
    uuid: UUID


class TaxRateProductCount(BaseModel):
    count: Optional[int] = None
    taxRateUuid: Optional[UUID] = None


class TaxRateProductCountResponse(BaseModel):
    counts: Optional[List[TaxRateProductCount]] = None


class TaxRateUpdateRequest(BaseModel):
    default: Optional[bool] = None
    label: Optional[constr(min_length=0, max_length=512)] = None
    percentage: Optional[confloat(le=100.0)] = None


class TaxRatesCreateRequest(BaseModel):
    taxRates: List[TaxRate] = Field(..., max_length=15, min_length=0)


class TaxRatesResponse(BaseModel):
    taxRates: Optional[List[TaxRate]] = None


class TaxationMode(Enum):
    EXCLUSIVE = 'EXCLUSIVE'
    INCLUSIVE = 'INCLUSIVE'


class TaxationType(Enum):
    NONE = 'NONE'
    SALES_TAX = 'SALES_TAX'
    VAT = 'VAT'


class TaxSettingsResponse(BaseModel):
    organizationUuid: Optional[UUID] = None
    taxationMode: Optional[TaxationMode] = None
    taxationType: Optional[TaxationType] = None


class TaxSettingsUpdateRequest(BaseModel):
    taxationMode: TaxationMode


class VariantOption(BaseModel):
    name: constr(min_length=1, max_length=30)
    value: constr(min_length=1, max_length=256)


class VariantOptionProperties(BaseModel):
    imageUrl: Optional[constr(min_length=1, max_length=256)] = None
    value: constr(min_length=1, max_length=256)


class VariantOptionsResponse(BaseModel):
    options: Optional[List[Option]] = None


class Unit(Enum):
    kg = 'kg'
    g = 'g'
    oz = 'oz'
    lb = 'lb'


class Weight(BaseModel):
    unit: Unit
    weight: confloat(ge=0.0)


class Uuid(RootModel[List[UUID]]):
    root: List[UUID]


class OrganizationsOrganizationUuidProductsOptionsGetResponse(
    RootModel[List[VariantOptionsResponse]]
):
    root: List[VariantOptionsResponse]


class OrganizationsOrganizationUuidProductsV2CountGetResponse(
    RootModel[List[ProductCountResponse]]
):
    root: List[ProductCountResponse]


class V1TaxesGetResponse(RootModel[List[TaxRatesResponse]]):
    root: List[TaxRatesResponse]


class DiscountRequest(BaseModel):
    amount: Optional[Price] = None
    description: Optional[constr(min_length=0, max_length=128)] = None
    externalReference: Optional[constr(min_length=0, max_length=128)] = None
    imageLookupKeys: Optional[List[str]] = None
    name: Optional[constr(min_length=0, max_length=64)] = None
    percentage: Optional[confloat(ge=0.0, le=100.0)] = None
    uuid: UUID


class DiscountResponse(BaseModel):
    amount: Optional[Price] = None
    created: datetime
    description: Optional[str] = None
    etag: str
    externalReference: Optional[str] = None
    imageLookupKeys: Optional[List[str]] = None
    name: str
    percentage: Optional[float] = None
    updated: datetime
    updatedBy: Optional[UUID] = None
    uuid: UUID


class MetadataDTO(BaseModel):
    inPos: bool
    source: Optional[SourceDTO] = None


class Shipping(BaseModel):
    shippingPricingModel: Optional[ShippingPricingModel] = None
    weight: Optional[Weight] = None
    weightInGrams: Optional[conint(ge=0, le=2147483647)] = None


class VariantDTO(BaseModel):
    barcode: Optional[constr(min_length=0, max_length=128)] = None
    costPrice: Optional[Price] = None
    description: Optional[constr(min_length=0, max_length=1024)] = None
    name: Optional[constr(min_length=0, max_length=256)] = None
    options: Optional[List[VariantOption]] = Field(None, max_length=99, min_length=1)
    presentation: Optional[PresentationDTO] = None
    price: Optional[Price] = None
    sku: Optional[constr(min_length=0, max_length=64)] = None
    uuid: UUID
    vatPercentage: Optional[confloat(ge=0.0, le=100.0)] = None


class VariantOptionDefinition(BaseModel):
    name: constr(min_length=1, max_length=30)
    properties: List[VariantOptionProperties] = Field(..., max_length=99, min_length=1)


class VariantOptionDefinitions(BaseModel):
    definitions: List[VariantOptionDefinition] = Field(..., max_length=3, min_length=1)


class OrganizationsOrganizationUuidDiscountsGetResponse(
    RootModel[List[DiscountResponse]]
):
    root: List[DiscountResponse]


class OnlineProperties(BaseModel):
    description: Optional[constr(min_length=0, max_length=3500)] = None
    presentation: Optional[Presentation] = None
    seo: Optional[SearchEngineOptimization] = None
    shipping: Optional[Shipping] = None
    status: Status
    title: Optional[constr(min_length=0, max_length=256)] = None


class ProductCreateRequest(BaseModel):
    categories: Optional[List[str]] = None
    category: Optional[CategoryDTO] = None
    createWithDefaultTax: Optional[bool] = None
    description: Optional[constr(min_length=0, max_length=1024)] = None
    externalReference: Optional[constr(min_length=0, max_length=128)] = None
    imageLookupKeys: Optional[List[str]] = None
    metadata: Optional[MetadataDTO] = None
    name: constr(min_length=1, max_length=256)
    online: Optional[OnlineProperties] = None
    presentation: Optional[PresentationDTO] = None
    taxCode: Optional[str] = None
    taxExempt: Optional[bool] = None
    taxRates: Optional[List[UUID]] = None
    unitName: Optional[constr(min_length=0, max_length=32)] = None
    uuid: UUID
    variantOptionDefinitions: Optional[VariantOptionDefinitions] = None
    variants: Optional[List[VariantDTO]] = None
    vatPercentage: Optional[confloat(ge=0.0, le=100.0)] = None


class ProductResponse(BaseModel):
    categories: Optional[List[str]] = Field(None, max_length=1, min_length=0)
    category: Optional[CategoryDTO] = None
    created: datetime
    description: Optional[str] = None
    etag: str
    externalReference: Optional[str] = None
    imageLookupKeys: Optional[List[str]] = None
    metadata: Optional[MetadataDTO] = None
    name: str
    online: Optional[OnlineProperties] = None
    presentation: Optional[PresentationDTO] = None
    taxCode: Optional[str] = None
    taxExempt: Optional[bool] = None
    taxRates: Optional[List[UUID]] = None
    unitName: Optional[str] = None
    updated: datetime
    updatedBy: Optional[UUID] = None
    uuid: UUID
    variantOptionDefinitions: Optional[VariantOptionDefinitions] = None
    variants: List[VariantDTO] = Field(..., max_length=99, min_length=1)
    vatPercentage: Optional[float] = None


class OrganizationsOrganizationUuidProductsGetResponse(
    RootModel[List[ProductResponse]]
):
    root: List[ProductResponse]


class OrganizationsOrganizationUuidProductsV2GetResponse(
    RootModel[List[ProductResponse]]
):
    root: List[ProductResponse]


class FullProductUpdateRequest(BaseModel):
    categories: Optional[List[str]] = Field(None, max_length=1, min_length=0)
    category: Optional[CategoryDTO] = None
    description: Optional[constr(min_length=0, max_length=1024)] = None
    externalReference: Optional[str] = None
    imageLookupKeys: Optional[List[str]] = None
    metadata: Optional[MetadataDTO] = None
    name: constr(min_length=1, max_length=256)
    online: Optional[OnlineProperties] = None
    presentation: Optional[PresentationDTO] = None
    taxCode: Optional[str] = None
    taxExempt: Optional[bool] = None
    taxRates: Optional[List[UUID]] = None
    unitName: Optional[str] = None
    uuid: UUID
    variantOptionDefinitions: Optional[VariantOptionDefinitions] = None
    variants: Optional[List[VariantDTO]] = None
    vatPercentage: Optional[confloat(ge=0.0, le=100.0)] = None


class LibraryResponse(BaseModel):
    deletedDiscounts: Optional[List[UUID]] = None
    deletedProducts: Optional[List[UUID]] = None
    discounts: Optional[List[DiscountResponse]] = None
    fromEventLogUuid: Optional[UUID] = None
    products: Optional[List[ProductResponse]] = None
    untilEventLogUuid: Optional[UUID] = None


class BulkImportRequest(BaseModel):
    products: List[FullProductUpdateRequest]
